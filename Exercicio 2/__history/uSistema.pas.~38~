unit uSistema;

interface

uses UConexao, uFuncionario, Vcl.Dialogs;

type
  TSistemaControl = class
  private
    FConexao: TConexao;
    FFuncionario: TFuncionario;
    FCodigoFuncionario: Integer;

  class var
    FInstance: TSistemaControl;
    ODialog: TOpenDialog;
  public
    Constructor Create;
    Destructor Destroy; override;

    procedure SetFuncionario(Codigo: Integer);
    class function GetInstance: TSistemaControl;
    Procedure CarregarFuncionario(Codigo: Integer);
    property Funcionario: TFuncionario read FFuncionario write FFuncionario;
    property Conexao: TConexao read FConexao write FConexao;
  end;

implementation

uses System.SysUtils, Vcl.Forms;
{ TSistemaControl }

procedure TSistemaControl.CarregarFuncionario(Codigo: Integer);
begin
  FFuncionario.Carregar(Codigo);
end;

constructor TSistemaControl.Create;
begin
ODialog.Create();
  ShowMessage('Escolha o Caminho do banco de dados por favor !');
  if ODialog.Execute then
  begin
    FConexao := TConexao.Create(ODialog.FileName);
  end
  else
  begin
    ShowMessage('Falha ao conectar com o banco de dados!!' + #13 +
      'Encerrando aplicação !');
    Application.Terminate;
  end;
  FFuncionario := TFuncionario.Create;
end;

destructor TSistemaControl.Destroy;
begin
  FreeAndNil(FFuncionario);
  FreeAndNil(FConexao);
end;

class function TSistemaControl.GetInstance: TSistemaControl;
begin
  if not Assigned(Self.FInstance) then
    Self.FInstance := TSistemaControl.Create();

  Result := Self.FInstance;
end;

procedure TSistemaControl.SetFuncionario(Codigo: Integer);
begin
  FCodigoFuncionario := Codigo;
end;

end.
